<channel version="3.5.1">
  <id>6dcd6af9-7395-447e-b4d4-450752fe73a4</id>
  <nextMetaDataId>4</nextMetaDataId>
  <name>Web_HTTP_ConfirmUserRegistration_P</name>
  <description></description>
  <revision>12</revision>
  <sourceConnector version="3.5.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
      <pluginProperties>
        <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
        </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
      </pluginProperties>
      <listenerConnectorProperties version="3.5.1">
        <host>0.0.0.0</host>
        <port>914</port>
      </listenerConnectorProperties>
      <sourceConnectorProperties version="3.5.1">
        <responseVariable>response</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <xmlBody>true</xmlBody>
      <parseMultipart>true</parseMultipart>
      <includeMetadata>true</includeMetadata>
      <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
      <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
      <responseContentType>text/html</responseContentType>
      <responseDataTypeBinary>false</responseDataTypeBinary>
      <responseStatusCode>${responseStatusCode}</responseStatusCode>
      <responseHeaders class="linked-hash-map"/>
      <charset>UTF-8</charset>
      <contextPath>confirm_user_registration</contextPath>
      <timeout>0</timeout>
      <staticResources/>
    </properties>
    <transformer version="3.5.1">
      <elements/>
      <inboundTemplate encoding="base64">PEh0dHBSZXF1ZXN0Pg0KICAgIDxSZW1vdGVBZGRyZXNzPjEwLjEwMC40OC4xMTI8L1JlbW90ZUFk
ZHJlc3M+DQogICAgPFJlcXVlc3RVcmw+aHR0cDovLzE1MC4yMTQuMTQwLjIyMzo5MTMvcmVzZXRf
cGFzc3dvcmQvPC9SZXF1ZXN0VXJsPg0KICAgIDxNZXRob2Q+UE9TVDwvTWV0aG9kPg0KICAgIDxS
ZXF1ZXN0UGF0aC8+DQogICAgPFJlcXVlc3RDb250ZXh0UGF0aD4vcmVzZXRfcGFzc3dvcmQvPC9S
ZXF1ZXN0Q29udGV4dFBhdGg+DQogICAgPFBhcmFtZXRlcnM+DQogICAgICAgIDxyZXBlYXRfcGFz
c3dvcmQ+aGpnamhnZzwvcmVwZWF0X3Bhc3N3b3JkPg0KICAgICAgICA8bmV3X3Bhc3N3b3JkPmhk
ZmJnZmdiPC9uZXdfcGFzc3dvcmQ+DQogICAgICAgIDx1c2VybmFtZT5ob2xhPC91c2VybmFtZT4N
CiAgICAgICAgPHRva2VuPmRvbl9wZXBpdG88L3Rva2VuPg0KICAgIDwvUGFyYW1ldGVycz4NCiAg
ICA8SGVhZGVyPg0KICAgICAgICA8T3JpZ2luPmh0dHA6Ly8xNTAuMjE0LjE0MC4yMjM6OTEzPC9P
cmlnaW4+DQogICAgICAgIDxDYWNoZS1Db250cm9sPm1heC1hZ2U9MDwvQ2FjaGUtQ29udHJvbD4N
CiAgICAgICAgPEFjY2VwdD50ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0
aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLCovKjtxPTAuODwvQWNjZXB0Pg0KICAgICAgICA8VXBn
cmFkZS1JbnNlY3VyZS1SZXF1ZXN0cz4xPC9VcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzPg0KICAg
ICAgICA8Q29ubmVjdGlvbj5rZWVwLWFsaXZlPC9Db25uZWN0aW9uPg0KICAgICAgICA8VXNlci1B
Z2VudD5Nb3ppbGxhLzUuMCAoTWFjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAxMF8xMl80KSBBcHBs
ZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjExMCBT
YWZhcmkvNTM3LjM2PC9Vc2VyLUFnZW50Pg0KICAgICAgICA8UmVmZXJlcj5odHRwOi8vMTUwLjIx
NC4xNDAuMjIzOjkxMy9yZXNldF9wYXNzd29yZC88L1JlZmVyZXI+DQogICAgICAgIDxIb3N0PjE1
MC4yMTQuMTQwLjIyMzo5MTM8L0hvc3Q+DQogICAgICAgIDxBY2NlcHQtRW5jb2Rpbmc+Z3ppcCwg
ZGVmbGF0ZTwvQWNjZXB0LUVuY29kaW5nPg0KICAgICAgICA8QWNjZXB0LUxhbmd1YWdlPmVzLUVT
LGVzO3E9MC44LGVuO3E9MC42PC9BY2NlcHQtTGFuZ3VhZ2U+DQogICAgICAgIDxDb250ZW50LUxl
bmd0aD43NjwvQ29udGVudC1MZW5ndGg+DQogICAgICAgIDxDb250ZW50LVR5cGU+YXBwbGljYXRp
b24veC13d3ctZm9ybS11cmxlbmNvZGVkPC9Db250ZW50LVR5cGU+DQogICAgPC9IZWFkZXI+DQog
ICAgPENvbnRlbnQgZW5jb2Rpbmc9IkJhc2U2NCIgbXVsdGlwYXJ0PSJubyIvPg0KPC9IdHRwUmVx
dWVzdD4NCg==</inboundTemplate>
      <inboundDataType>XML</inboundDataType>
      <outboundDataType>XML</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
          <splitType>Element_Name</splitType>
          <elementName></elementName>
          <level>1</level>
          <query></query>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
          <stripNamespaces>true</stripNamespaces>
        </serializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
          <splitType>Element_Name</splitType>
          <elementName></elementName>
          <level>1</level>
          <query></query>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.5.1">
      <elements>
        <com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <name>is a link email</name>
          <sequenceNumber>0</sequenceNumber>
          <script>try{
	if(msg[&apos;Method&apos;].toString() == &apos;GET&apos;){
		destinationSet.removeAllExcept(&quot;sendPasswordForm&quot;);
		return true;
	}else{
		return false;
	}
}catch(e){
	return false;
}</script>
        </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        <com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <name>is a post form</name>
          <sequenceNumber>1</sequenceNumber>
          <operator>OR</operator>
          <script>try{
	if(msg[&apos;Method&apos;].toString() == &apos;POST&apos;){
		destinationSet.removeAllExcept(&quot;confirmRegistration&quot;);
		return true;
	}else{
		return false;
	}
}catch(e){
	return false;
}</script>
        </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
      </elements>
    </filter>
    <transportName>HTTP Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.5.1">
      <metaDataId>1</metaDataId>
      <name>sendPasswordForm</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.5.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var html = &apos;Invalid request&apos;

username = channelMap.get(&apos;username&apos;);
token = channelMap.get(&apos;token&apos;);

requestCase = channelMap.get(&apos;requestCase&apos;);

if(requestCase == &apos;invalidOrExpired&apos;){

	html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
			&apos;&lt;html&gt;&lt;body&gt;&apos; +
			&apos;&lt;h4&gt;(EL) Το αίτημα είναι άκυρο ή έχει λήξει. (ES) Solicitud no válida o caducada. (ZH) 請求無效或過期。(EN) Request invalid or expired.&lt;/h4&gt;&apos; +
			&apos;&lt;h5&gt;(EL) Ο σύνδεσμος που χρησιμοποίησες ζητήθηκε πριν από πολύ καιρό και έχει λήξει ή δεν είναι έγκυρος. Εισήγαγε ξανά τα διαπιστευτήριά σου στην εφαρμογή και θα σου στείλουμε ένα νέο σύνδεσμο επιβεβαίωσης.&lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(ES) El enlace que utilizaste fue solicitado hace mucho tiempo y ha caducado o no es válido. Introduce tus credenciales de nuevo en la aplicación y te enviaremos un nuevo enlace de verificación. &lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(ZH) 您使用的連結閒置過久，已經過期或者無效。請再次於應用程式中輸入您的資訊並取得新的認證連結。&lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(EN) The link you used was requested a long time ago and has expired or is not valid. Please enter your credentials again in the application and we will send you a new verification link.&lt;/h5&gt;&apos;+
			&apos;&lt;/body&gt;&lt;/html&gt;&apos;;
	channelMap.put(&apos;responseStatusCode&apos;, &apos;404&apos;);
	
}else if(requestCase == &apos;UserAlreadyExists&apos;){

	html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
			&apos;&lt;html&gt;&lt;body&gt;&apos; +
			&apos;&lt;h4&gt;(EL) Ο χρήστης ήδη υπάρχει. (ES) El usuario ya existe. (ZH) 用戶已經存在。(EN) The user already exists.&lt;/h4&gt;&apos; +
			&apos;&lt;h5&gt;(EL) Έχεις ήδη επιβεβαιώσει την εγγραφή στο παρελθόν, χρησιμοποίησε τα διαπιστευτήριά σου (διεύθυνση ηλεκτρονικού ταχυδρομείου και κωδικό πρόσβασης) για πρόσβαση στην εφαρμογή. Αν δεν θυμάσε τον κωδικό πρόσβασής σου, μπορείς να ζητήσεις νέο από την εφαρμογή.&lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(ES) Ya has confirmado el registro anteriormente, usa tus credenciales (correo electrónico y contraseña) en la aplicación para acceder. Si no recuerdas tu contraseña, puedes solicitar una nueva desde la aplicación.&lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(ZH) 您已經完成確認註冊，請使用您的登入資訊(電子信箱地址以及密碼)登入應用程式。如果您忘記密碼，可以於應用程式中設定新的密碼。&lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(EN) You have already confirmed the registration previously, use your credentials (email and password) in the application to access. If you do not remember your password, you can request a new one from the application.&lt;/h5&gt;&apos;+
			&apos;&lt;/body&gt;&lt;/html&gt;&apos;;
	
	channelMap.put(&apos;responseStatusCode&apos;, &apos;405&apos;);
	
}else if(requestCase == &apos;correct&apos;){
	html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
		&apos;&lt;html&gt;&lt;body&gt;&lt;form action=&quot; http://IntroduceYourServerIP:914/confirm_user_registration/&quot; method=&quot;POST&quot;&gt;&apos; +
		&apos;&lt;h4&gt;(EL) Κωδικός πρόσβασης για τον Quit&amp;Return λογαριασμό σου. (ES) Contraseña para tu cuenta Quit&amp;Return. (ZH) 有戒有還帳號之密碼。 (EN) Password for your Quit&amp;Return account.&lt;/h4&gt;&apos; +
		&apos;&lt;h5&gt;(EL) Παρακαλώ, εισήγαγε έναν κωδικό πρόσβασης για τον Quit&amp;Return λογαριασμό σου:&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(ES) Por favor, introduzca una contraseña para su cuenta Quit&amp;Return&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(ZH) 請為您的有戒有還帳號設定一個密碼:&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(EN) Please, introduce a password for your Quit&amp;Return account.&lt;/h5&gt;&apos;+
		&apos;&lt;input type=&quot;hidden&quot; name=&quot;username&quot; value=&quot;&apos; + username +&apos;&quot;&gt;&apos; + 
		&apos;&lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;&apos; + token + &apos;&quot;&gt;&apos; + 
		&apos;&lt;br&gt;(EL)Κωδικός πρόσβασης. (ES) Contraseña. (ZH) 密碼。 (EN) Password:&lt;br&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&apos; +
		&apos;&lt;br&gt;(EL)Επανέλαβε τον κωδικό πρόσβασης. (ES) Repite la contraseña. (ZH) 再次輸入密碼。 (EN) Repeat the password.&lt;br&gt;&lt;input type=&quot;password&quot; name=&quot;repeat_password&quot;&gt;&apos; + 
		&apos;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&apos; + 
		&apos;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&apos;
			
	channelMap.put(&apos;responseStatusCode&apos;, &apos;200&apos;);
			
}

responseMap.put(&apos;response&apos;, html);
return $r(&apos;response&apos;);

</script>
      </properties>
      <transformer version="3.5.1">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.5.1">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.5.1">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            <name>correct parameters</name>
            <sequenceNumber>0</sequenceNumber>
            <script>var needXMLResponse;

try{

var username = msg[&apos;Parameters&apos;][&apos;username&apos;].toString();
var token = msg[&apos;Parameters&apos;][&apos;token&apos;].toString();

dataBaseConnection = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://localhost:5432/NameOfDatabaseEstablished&apos;,&apos;introducedatabaseusername&apos;,&apos;introducepasswordfordatabaseuser&apos;);

if(!username.equals(new String()) &amp;&amp; !token.equals(new String())){

	var selectPossibleValidRegistrationRequestQuery = &quot;SELECT * FROM signuprequest WHERE used_username = ? AND generated_token = ? AND is_valid AND NOT confirmed AND request_date &gt; CURRENT_TIMESTAMP - INTERVAL &apos;2 DAY&apos; &quot;;
	var checkIfUserAlreadyRegisteredQuery = &quot;SELECT * FROM useraccount WHERE username = ?&quot;;
	
	var selectPossibleValidRegistrationRequest = dataBaseConnection.executeCachedQuery(selectPossibleValidRegistrationRequestQuery, [username.toString(), token.toString()]);
	var possibleAlreadyRegisteredUser = dataBaseConnection.executeCachedQuery(checkIfUserAlreadyRegisteredQuery, [username.toString()]);

	
	existsARegistrationRequestForUser = selectPossibleValidRegistrationRequest.next();
	userIsAlreadyRegistered = possibleAlreadyRegisteredUser.next();

	
	if(existsARegistrationRequestForUser){
		
		if(userIsAlreadyRegistered){
			
			channelMap.put(&apos;requestCase&apos;, &apos;UserAlreadyExists&apos;);
			needXMLResponse = true;
			channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;405&quot;, errorMessage:&quot;method not allowed&quot;});
			channelMap.put(&apos;responseStatusCode&apos;, &apos;405&apos;);
			channelMap.put(&apos;hasError&apos;, 1);
			
		}else{
			needXMLResponse = true;
			channelMap.put(&apos;requestCase&apos;, &apos;correct&apos;);
			channelMap.put(&apos;username&apos;,username);
			channelMap.put(&apos;token&apos;, token);
		}
		
	}else{
		channelMap.put(&apos;requestCase&apos;, &apos;invalidOrExpired&apos;);
		needXMLResponse = true;
		channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;404&quot;, errorMessage:&quot;not found&quot;});
		channelMap.put(&apos;responseStatusCode&apos;, &apos;404&apos;);
		channelMap.put(&apos;hasError&apos;, 1);
	}
	
	
}else{
	needXMLResponse = false;
	channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;401&quot;, errorMessage:&quot;unauthorized&quot;});
	channelMap.put(&apos;responseStatusCode&apos;, &apos;401&apos;);
	channelMap.put(&apos;hasError&apos;, 1);
	responseMap.put(&apos;response&apos;, &apos;unauthorized&apos;);
}

}catch(e){
	logger.info(e)
	needXMLResponse = false;
	channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;400&quot;, errorMessage:&quot;bad request&quot;});
	channelMap.put(&apos;responseStatusCode&apos;, &apos;400&apos;);
	channelMap.put(&apos;hasError&apos;, 1);
	responseMap.put(&apos;response&apos;, &apos;bad request&apos;);

}finally {
	if (dataBaseConnection) { 
		dataBaseConnection.close();
	}
}


return needXMLResponse;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.5.1">
      <metaDataId>3</metaDataId>
      <name>confirmRegistration</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.5.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var html = &apos;Invalid request&apos;

var username = channelMap.get(&apos;username&apos;);
var token = channelMap.get(&apos;token&apos;);

requestCase = channelMap.get(&apos;requestCase&apos;);


if(requestCase == &apos;invalidOrExpired&apos;){

	html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
			&apos;&lt;html&gt;&lt;body&gt;&apos; +
			&apos;&lt;h4&gt;(EL) Το αίτημα είναι άκυρο ή έχει λήξει. (ES) Solicitud no válida o caducada. (ZH) 請求無效或過期。(EN) Request invalid or expired.&lt;/h4&gt;&apos; +
			&apos;&lt;h5&gt;(EL) Ο σύνδεσμος που χρησιμοποίησες ζητήθηκε πριν από πολύ καιρό και έχει λήξει ή δεν είναι έγκυρος. Εισήγαγε ξανά τα διαπιστευτήριά σου στην εφαρμογή και θα σου στείλουμε ένα νέο σύνδεσμο επιβεβαίωσης.&lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(ES) El enlace que utilizaste fue solicitado hace mucho tiempo y ha caducado o no es válido. Introduce tus credenciales de nuevo en la aplicación y te enviaremos un nuevo enlace de verificación. &lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(ZH) 您使用的連結閒置過久，已經過期或者無效。請再次於應用程式中輸入您的資訊並取得新的認證連結。&lt;/h5&gt;&apos;+
			&apos;&lt;br&gt;&lt;h5&gt;(EN) The link you used was requested a long time ago and has expired or is not valid. Please enter your credentials again in the application and we will send you a new verification link.&lt;/h5&gt;&apos;+
			&apos;&lt;/body&gt;&lt;/html&gt;&apos;;
	channelMap.put(&apos;responseStatusCode&apos;, &apos;404&apos;);
	
}else if(requestCase == &apos;UserAlreadyExists&apos;){

	html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
				&apos;&lt;html&gt;&lt;body&gt;&apos; +
				&apos;&lt;h4&gt;(EL) Ο χρήστης ήδη υπάρχει. (ES) El usuario ya existe. (ZH) 用戶已經存在。(EN) The user already exists.&lt;/h4&gt;&apos; +
				&apos;&lt;h5&gt;(EL) Έχεις ήδη επιβεβαιώσει την εγγραφή στο παρελθόν, χρησιμοποίησε τα διαπιστευτήριά σου (διεύθυνση ηλεκτρονικού ταχυδρομείου και κωδικό πρόσβασης) για πρόσβαση στην εφαρμογή. Αν δεν θυμάσε τον κωδικό πρόσβασής σου, μπορείς να ζητήσεις νέο από την εφαρμογή.&lt;/h5&gt;&apos;+
				&apos;&lt;br&gt;&lt;h5&gt;(ES) Ya has confirmado el registro anteriormente, usa tus credenciales (correo electrónico y contraseña) en la aplicación para acceder. Si no recuerdas tu contraseña, puedes solicitar una nueva desde la aplicación.&lt;/h5&gt;&apos;+
				&apos;&lt;br&gt;&lt;h5&gt;(ZH) 您已經完成確認註冊，請使用您的登入資訊(電子信箱地址以及密碼)登入應用程式。如果您忘記密碼，可以於應用程式中設定新的密碼。&lt;/h5&gt;&apos;+
				&apos;&lt;br&gt;&lt;h5&gt;(EN) You have already confirmed the registration previously, use your credentials (email and password) in the application to access. If you do not remember your password, you can request a new one from the application.&lt;/h5&gt;&apos;+
				&apos;&lt;/body&gt;&lt;/html&gt;&apos;;
	
	channelMap.put(&apos;responseStatusCode&apos;, &apos;405&apos;);
	
}else if(requestCase == &apos;fieldsInvalid&apos;){
	html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
		&apos;&lt;html&gt;&lt;body&gt;&lt;form action=&quot; http://IntroduceYourServerIP:914/confirm_user_registration/&quot; method=&quot;POST&quot;&gt;&apos; +
		&apos;&lt;h4&gt;(EL) Κωδικός πρόσβασης για τον Quit&amp;Return λογαριασμό σου. (ES) Contraseña para tu cuenta Quit&amp;Return. (ZH) 有戒有還帳號之密碼。 (EN) Password for your Quit&amp;Return account.&lt;/h4&gt;&apos; +
		&apos;&lt;strong&gt; &lt;font color=&quot;red&quot;&gt; (EL) Πρέπει να συμπληρώσεις όλα τα πεδία. Ο κωδικός πρόσβασης πρέπει να είναι μεγαλύτερος από τρία ψηφία.&lt;/font&gt;&lt;/strong&gt;&apos; +
		&apos;&lt;br&gt;&lt;strong&gt; &lt;font color=&quot;red&quot;&gt; (ES) Debes completar todos los campos. La contraseña debe tener más de tres caracteres.&lt;/font&gt;&lt;/strong&gt;&apos; +
		&apos;&lt;br&gt;&lt;strong&gt; &lt;font color=&quot;red&quot;&gt; (ZH) 請確實填寫所有空格，密碼必須超過三個字元。&lt;/font&gt;&lt;/strong&gt;&apos; +
		&apos;&lt;br&gt;&lt;strong&gt; &lt;font color=&quot;red&quot;&gt; (EN) You must complete all fields. Password must be longer than three digits.&lt;/font&gt;&lt;/strong&gt;&apos; +
		&apos;&lt;h5&gt;(EL) Παρακαλώ, εισήγαγε έναν κωδικό πρόσβασης για τον Quit&amp;Return λογαριασμό σου:&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(ES) Por favor, introduzca una contraseña para su cuenta Quit&amp;Return&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(ZH) 請為您的有戒有還帳號設定一個密碼:&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(EN) Please, introduce a password for your Quit&amp;Return account.&lt;/h5&gt;&apos;+
		&apos;&lt;input type=&quot;hidden&quot; name=&quot;username&quot; value=&quot;&apos; + username +&apos;&quot;&gt;&apos; + 
		&apos;&lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;&apos; + token + &apos;&quot;&gt;&apos; + 
		&apos;&lt;br&gt;(EL)Κωδικός πρόσβασης. (ES) Contraseña. (ZH) 密碼。 (EN) Password:&lt;br&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&apos; +
		&apos;&lt;br&gt;(EL)Επανέλαβε τον κωδικό πρόσβασης. (ES) Repite la contraseña. (ZH) 再次輸入密碼。 (EN) Repeat the password.&lt;br&gt;&lt;input type=&quot;password&quot; name=&quot;repeat_password&quot;&gt;&apos; + 
		&apos;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&apos; + 
		&apos;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&apos;;
		
}else if(requestCase == &apos;passwordNotMatch&apos;){
	html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
		&apos;&lt;html&gt;&lt;body&gt;&lt;form action=&quot; http://IntroduceYourServerIP:914/confirm_user_registration/&quot; method=&quot;POST&quot;&gt;&apos; +
		&apos;&lt;h4&gt;(EL) Κωδικός πρόσβασης για τον Quit&amp;Return λογαριασμό σου. (ES) Contraseña para tu cuenta Quit&amp;Return. (ZH) 有戒有還帳號之密碼。 (EN) Password for your Quit&amp;Return account.&lt;/h4&gt;&apos; +
		&apos;&lt;strong&gt; &lt;font color=&quot;red&quot;&gt; (EL) Ο κωδικός δεν ταιριάζει. (ES)  Las contraseñas no coinciden. (ZH) 再次輸入之密碼不符合。 (EN) Password do not match.&lt;/font&gt;&lt;/strong&gt;&apos; +
		&apos;&lt;h5&gt;(EL) Παρακαλώ, εισήγαγε έναν κωδικό πρόσβασης για τον Quit&amp;Return λογαριασμό σου:&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(ES) Por favor, introduzca una contraseña para su cuenta Quit&amp;Return&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(ZH) 請為您的有戒有還帳號設定一個密碼:&lt;/h5&gt;&apos;+
		&apos;&lt;h5&gt;(EN) Please, introduce a password for your Quit&amp;Return account.&lt;/h5&gt;&apos;+
		&apos;&lt;input type=&quot;hidden&quot; name=&quot;username&quot; value=&quot;&apos; + username +&apos;&quot;&gt;&apos; + 
		&apos;&lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;&apos; + token + &apos;&quot;&gt;&apos; + 
		&apos;&lt;br&gt;(EL)Κωδικός πρόσβασης. (ES) Contraseña. (ZH) 密碼。 (EN) Password:&lt;br&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&apos; +
		&apos;&lt;br&gt;(EL)Επανέλαβε τον κωδικό πρόσβασης. (ES) Repite la contraseña. (ZH) 再次輸入密碼。 (EN) Repeat the password.&lt;br&gt;&lt;input type=&quot;password&quot; name=&quot;repeat_password&quot;&gt;&apos; + 
		&apos;&lt;br&gt;&lt;br&gt;&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&apos; + 
		&apos;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;&apos;;
		
}else if(requestCase == &apos;correct&apos;){


	var hash_password = channelMap.get(&apos;hash_password&apos;);

	try{
		dataBaseConnection = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://localhost:5432/NameOfDatabaseEstablished&apos;,&apos;introducedatabaseusername&apos;,&apos;introducepasswordfordatabaseuser&apos;);

		var params = [username, hash_password, &apos;unknown&apos;, &apos;Europe/Madrid&apos;]; // Default values for this registration way 
	
		// TODO change for the database stored procedure signupbasicuser when the intervention with patients begin
		dataBaseConnection.executeUpdate(&quot;SELECT signupbasicuser(?, ?, ?, ?)&quot;, params); // void method, new user in database

		var idNewUser = dataBaseConnection.executeCachedQuery(&quot;SELECT id FROM useraccount WHERE username = ?&quot;, [username]);
	
		var id;
		if(idNewUser.size() &lt;1){
			html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
				&apos;&lt;html&gt;&lt;body&gt;&apos; +
				&apos;&lt;h4&gt;(EL) Σφάλμα Διακομιστή. (ES) Error del servidor. (EN) Server error. (ZH) 伺服器錯誤&lt;/h4&gt;&apos; +
				&apos;&lt;h5&gt;(EL) Παρουσιάστηκε μη αναμενόμενο σφάλμα. Δοκίμασε ξανά αργότερα ή  ξανακάνε εγγραφή στην εφαρμογή για να λάβεις έναν άλλο σύνδεσμο επιβεβαίωσης.&lt;/h5&gt;&apos;+
				&apos;&lt;h5&gt;(ES) Ha ocurrido un error inesperado. Inténtalo de nuevo más tarde o regístrate nuevamente en la aplicación para obtener otro enlace de confirmación.&lt;/h5&gt;&apos;+
				&apos;&lt;h5&gt;(ZH) 發生了意外錯誤，請稍候再嘗試一次或者再次登入應用程式以取得新的確認連結。&lt;/h5&gt;&apos;+
				&apos;&lt;h5&gt;(EN) An unexpected error has occurred. Please try again later or sign up again in the app to get another confirmation link.&lt;/h5&gt;&apos;+
				&apos;&lt;/body&gt;&lt;/html&gt;&apos;;
			channelMap.put(&apos;responseStatusCode&apos;, &apos;500&apos;);
			
		}else{
			html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
				&apos;&lt;html&gt;&lt;body&gt;&apos; +
				&apos;&lt;h4&gt;(EL) Επιτυχία! (ES) ¡Éxito! (ZH) 成功! (EN) Success!&lt;/h4&gt;&apos; +
				&apos;&lt;h5&gt;(EL) Μόλις επιβεβαίωσες το λογαριασμό σου! Τώρα μπορείς να χρησιμοποιήσεις τα διαπιστευτήριά σου (διεύθυνση ηλεκτρονικού ταχυδρομείου και κωδικό πρόσβασης) για πρόσβαση στην εφαρμογή.&lt;/h5&gt;&apos;+
				&apos;&lt;br&gt;&lt;h5&gt;(ES) ¡Has confirmado tu cuenta de usuario! Ahora puedes usar tus credenciales (correo electrónico y contraseña) en la aplicación para acceder.&lt;/h5&gt;&apos;+
				&apos;&lt;br&gt;&lt;h5&gt;(ZH) 您完成確認帳號了！現在您可以使用登入資訊(電子信箱地址以及密碼)來登入本應用程式。&lt;/h5&gt;&apos;+
				&apos;&lt;br&gt;&lt;h5&gt;(EN) You just confirmed your user account! Now you can use your credentials (email and password) in the application to access.&lt;/h5&gt;&apos;+
				&apos;&lt;/body&gt;&lt;/html&gt;&apos;;
			
			channelMap.put(&apos;responseStatusCode&apos;, &apos;200&apos;);
			
			setRequestConfirmedQuery = &quot;UPDATE signuprequest SET confirmed=true WHERE is_valid AND used_username = ?&quot;;
			dataBaseConnection.executeUpdate(setRequestConfirmedQuery, [username]);
		}
		
	}catch(e){
		html = &apos;&lt;!DOCTYPE html&gt;&apos; + 
			&apos;&lt;html&gt;&lt;body&gt;&apos; +
			&apos;&lt;h4&gt;(EL) Σφάλμα Διακομιστή. (ES) Error del servidor. (EN) Server error. (ZH) 伺服器錯誤&lt;/h4&gt;&apos; +
			&apos;&lt;h5&gt;(EL) Παρουσιάστηκε μη αναμενόμενο σφάλμα. Δοκίμασε ξανά αργότερα ή  ξανακάνε εγγραφή στην εφαρμογή για να λάβεις έναν άλλο σύνδεσμο επιβεβαίωσης.&lt;/h5&gt;&apos;+
			&apos;&lt;h5&gt;(ES) Ha ocurrido un error inesperado. Inténtalo de nuevo más tarde o regístrate nuevamente en la aplicación para obtener otro enlace de confirmación.&lt;/h5&gt;&apos;+
			&apos;&lt;h5&gt;(ZH) 發生了意外錯誤，請稍候再嘗試一次或者再次登入應用程式以取得新的確認連結。&lt;/h5&gt;&apos;+
			&apos;&lt;h5&gt;(EN) An unexpected error has occurred. Please try again later or sign up again in the app to get another confirmation link.&lt;/h5&gt;&apos;+
			&apos;&lt;/body&gt;&lt;/html&gt;&apos;;
		channelMap.put(&apos;responseStatusCode&apos;, &apos;500&apos;);
	}
	finally{
		
		dataBaseConnection.close();
	}
}

responseMap.put(&apos;response&apos;, html);
return $r(&apos;response&apos;);

</script>
      </properties>
      <transformer version="3.5.1">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.5.1">
        <elements/>
        <inboundDataType>XML</inboundDataType>
        <outboundDataType>XML</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
            <stripNamespaces>true</stripNamespaces>
          </serializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
            <splitType>Element_Name</splitType>
            <elementName></elementName>
            <level>1</level>
            <query></query>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.5.1">
        <elements>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            <name>correct parameters</name>
            <sequenceNumber>0</sequenceNumber>
            <script>var needXMLResponse;

try{

var username = msg[&apos;Parameters&apos;][&apos;username&apos;].toString();
var token = msg[&apos;Parameters&apos;][&apos;token&apos;].toString();
var password = msg[&apos;Parameters&apos;][&apos;password&apos;].toString();
var repeat_password = msg[&apos;Parameters&apos;][&apos;repeat_password&apos;].toString();


if(!username.equals(new String()) &amp;&amp; !token.equals(new String())){
	dataBaseConnection = DatabaseConnectionFactory.createDatabaseConnection(&apos;org.postgresql.Driver&apos;,&apos;jdbc:postgresql://localhost:5432/NameOfDatabaseEstablished&apos;,&apos;introducedatabaseusername&apos;,&apos;introducepasswordfordatabaseuser&apos;);

	var selectPossibleValidRegistrationRequestQuery = &quot;SELECT * FROM signuprequest WHERE used_username = ? AND generated_token = ? AND is_valid AND NOT confirmed AND request_date &gt; CURRENT_TIMESTAMP - INTERVAL &apos;2 DAY&apos; &quot;;
	var checkIfUserAlreadyRegisteredQuery = &quot;SELECT * FROM useraccount WHERE username = ?&quot;;
	
	var selectPossibleValidRegistrationRequest = dataBaseConnection.executeCachedQuery(selectPossibleValidRegistrationRequestQuery, [username.toString(), token.toString()]);
	var possibleAlreadyRegisteredUser = dataBaseConnection.executeCachedQuery(checkIfUserAlreadyRegisteredQuery, [username.toString()]);

	
	existsARegistrationRequestForUser = selectPossibleValidRegistrationRequest.next();
	userIsAlreadyRegistered = possibleAlreadyRegisteredUser.next();

	
	if(existsARegistrationRequestForUser){
		
		if(userIsAlreadyRegistered){
			
			channelMap.put(&apos;requestCase&apos;, &apos;UserAlreadyExists&apos;);
			needXMLResponse = true;
			channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;405&quot;, errorMessage:&quot;method not allowed&quot;});
			channelMap.put(&apos;responseStatusCode&apos;, &apos;405&apos;);
			channelMap.put(&apos;hasError&apos;, 1);
			
		}else{
			channelMap.put(&apos;username&apos;,username);
			channelMap.put(&apos;token&apos;, token);
			if(password.equals(new String()) || repeat_password.equals(new String()) || password.length &lt; 4 || repeat_password.length &lt; 4){
				channelMap.put(&apos;requestCase&apos;, &apos;fieldsInvalid&apos;);
				needXMLResponse = true;
				channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;400&quot;, errorMessage:&quot;bad request&quot;});
				channelMap.put(&apos;responseStatusCode&apos;, &apos;400&apos;);
				channelMap.put(&apos;hasError&apos;, 1);
			
			}else{
				if(password.equals(repeat_password)){
					var hash_password = com.google.common.hash.Hashing.md5().hashString(password, java.nio.charset.Charset.forName(&apos;US-ASCII&apos;)).toString();
					channelMap.put(&apos;hash_password&apos;, hash_password);
					channelMap.put(&apos;requestCase&apos;, &apos;correct&apos;);
					needXMLResponse = true;
				}else{
					channelMap.put(&apos;requestCase&apos;, &apos;passwordNotMatch&apos;);
					needXMLResponse = true;
					channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;400&quot;, errorMessage:&quot;bad request&quot;});
					channelMap.put(&apos;responseStatusCode&apos;, &apos;400&apos;);
					channelMap.put(&apos;hasError&apos;, 1);
				}
			}
		}
		
	}else{
		channelMap.put(&apos;requestCase&apos;, &apos;invalidOrExpired&apos;);
		needXMLResponse = true;
		channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;404&quot;, errorMessage:&quot;not found&quot;});
		channelMap.put(&apos;responseStatusCode&apos;, &apos;404&apos;);
		channelMap.put(&apos;hasError&apos;, 1);
	}
	
	
}else{
	needXMLResponse = false;
	channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;401&quot;, errorMessage:&quot;unauthorized&quot;});
	channelMap.put(&apos;responseStatusCode&apos;, &apos;401&apos;);
	channelMap.put(&apos;hasError&apos;, 1);
	responseMap.put(&apos;response&apos;, &apos;unauthorized&apos;);
}

}catch(e){
	logger.info(e)
	needXMLResponse = false;
	channelMap.put(&apos;errorMessage&apos;, {errorCode:&quot;400&quot;, errorMessage:&quot;bad request&quot;});
	channelMap.put(&apos;responseStatusCode&apos;, &apos;400&apos;);
	channelMap.put(&apos;hasError&apos;, 1);
	responseMap.put(&apos;response&apos;, &apos;bad request&apos;);

}finally {
	if (dataBaseConnection) { 
		dataBaseConnection.close();
	}
}


return needXMLResponse;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        </elements>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.5.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>RAW</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.5.1">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1513027852983</time>
        <timezone>Europe/Madrid</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
      </pruningSettings>
    </metadata>
    <codeTemplateLibraries/>
  </exportData>
</channel>